@{
	string mapColor = "";
}
<div class="row">
	@* Legenda *@
	<div class="col-12 col-md-2 d-flex align-items-end">
		<div class="mx-auto border rounded-3 border-secondary p-1 mt-3 mt-md-0 mb-2 mb-md-3">

			<ul class="list-group">
				<li class="list-group-item d-flex align-items-center border-0">
					<span class="badge bg-success">&nbsp;</span>
					<span class="ps-2">Batterij goed</span>
				</li>

				<li class="list-group-item d-flex align-items-center border-0">
					<span class="badge bg-danger">&nbsp;</span>
					<span class="ps-2">Batterij vervangen</span>
				</li>
				<li class="list-group-item d-flex align-items-center border-0">
					<span class="badge bg-purple">&nbsp;</span>
					<span class="ps-2">Sensor offline</span>
				</li>
			</ul>
		</div>
	</div>

	@* Map *@
	<div class="col-12 col-md-10">
		@{
			var imagePath = "./wwwroot/" + ViewBag.map[0]["map_path"]; // Replace with the actual path to your image file
			int width = 900;

			using (var image = SixLabors.ImageSharp.Image.Load(imagePath))
			{
				width = (int)Math.Round(((float)image.Width / (float)image.Height) * 578.0f);
			}
		}
		<svg width="@width" height="578">
			<image href='@ViewBag.map[0]["map_path"]'
				   style="filter: grayscale(100%)"
				   height="100%" />
			@foreach (var room in ViewBag.rooms)
			{
				if (int.Parse(@room["co2_state"]) == 0)
				{
					if (!@room["co2_battery"].ToLower().Equals("true")){
					<a href='/room/index/@room["building_id"]/@room["room_number"]'>
							<polygon class="map-purple" points='@string.Format(@room["coordinates"])'></polygon>
					</a>
					} else {
						<a href='/room/index/@room["building_id"]/@room["room_number"]'>
						<polygon class="map-gray" points='@string.Format(@room["coordinates"])'></polygon>
					</a>
					}
				}
				else
				{
					<a data-bs-toggle="tooltip"
					   data-bs-custom-class="custom-tooltip"
					   data-bs-html="true"
					   data-bs-title='
					@if (@room["room_number"] != "")
					{
												<h1 class="tooltipHeader fw-bold">@room["room_number"]</h1>
					}

					@if (@room["occupied"] != "")
					{
						@if (@room["occupied"].ToLower().Equals("true"))
						{
												<p>Bezetting: <span class="incorrect">Bezet</span></p>
						}
						else
						{
												<p>Bezetting: <span class="correct">Vrij</span></p>
						}
					}

					@if (@room["motion_battery_percentage"] != "")
					{
						@if (Double.Parse(@room["motion_battery_percentage"]) > 0.0 && Double.Parse(@room["motion_battery_percentage"]) <= 20.0)
						{
												<p>Motion batterij: <span class="incorrect">@room["motion_battery_percentage"]%</span></p>
						}
						else if (Double.Parse(@room["motion_battery_percentage"]) > 20.0 && Double.Parse(@room["motion_battery_percentage"]) < 80.0)
						{
												<p>Motion batterij: <span class="text-warning">@room["motion_battery_percentage"]%</span></p>
						}
						else
						{
												<p>Motion batterij: <span class="correct">@room["motion_battery_percentage"]%</span></p>
						}
					}

					@if (@room["temperature"] != "")
					{
						@if (Double.Parse(@room["temperature"]) >= 18.0 && Double.Parse(@room["temperature"]) <= 23.0)
						{
												<p>Temperatuur: <span class="correct">@room["temperature"]&#176;</span></p>
						}
						else if (Double.Parse(@room["temperature"]) > 23.0)
						{
												<p>Temperatuur: <span class="incorrect">@room["temperature"]&#176;</span></p>
						}
						else
						{
												<p>Temperatuur: <span class="tooCold">@room["temperature"]&#176;</span></p>
						}
					}

					@if (@room["humidity"] != "")
					{
						@if (Double.Parse(@room["humidity"]) > 70.0)
						{
												<p>Luchtvochtigheid: <span class="incorrect">@room["humidity"]%</span></p>
						}
						else if (Double.Parse(@room["humidity"]) < 45.0)
						{
												<p>Luchtvochtigheid: <span class="text-warning">@room["humidity"]%</span></p>
						}
						else
						{
												<p>Luchtvochtigheid: <span class="correct">@room["humidity"]%</span></p>
						}
					}

					@if (@room["co2"] != "")
					{
						@if (Double.Parse(@room["co2"]) > 1200.0)
						{
												<p>CO&sup2;: <span class="incorrect">@room["co2"]ppm</span></p>
						}
						else if (Double.Parse(@room["co2"]) > 800.0 && Double.Parse(@room["co2"]) <= 1200.0)
						{
												<p>CO&sup2;: <span class="text-warning">@room["co2"]ppm</span></p>
						}
						else
						{
												<p>CO&sup2;: <span class="correct">@room["co2"]ppm</span></p>
						}

					}

					@if (@room["co2_battery_low"] != "" && @room["co2_battery"] != "" && @room["co2_battery"].ToLower().Equals("true"))
					{
						@if (@room["co2_battery_low"].ToLower().Equals("false") && @room["co2_battery"].ToLower().Equals("true"))
						{
							mapColor = "map-green";
												<p>CO&sup2; batterij: <span class="correct">Goed</span></p>
						}
						else
						{
							mapColor = "map-red";
												<p>CO&sup2; batterij: <span class="incorrect">Vervangen</span></p>
						}
					}
					else
					{
						mapColor = "map-gray";
										<p>CO&sup2; batterij: <span class="text-warning">Geen</span></p>
					}
							'
						href='/room/index/@room["building_id"]/@room["room_number"]'>
							<polygon class="@mapColor" points='@string.Format(@room["coordinates"])'></polygon>
						</a>

				}
			}
		</svg>
	</div>
</div>